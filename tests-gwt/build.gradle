/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2014-2017 Sri Harsha Chilakapati
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:1.4.0'
    }
}

apply plugin: 'java'
apply plugin: 'gwt'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

import org.wisepersist.gradle.plugins.gwt.GwtSuperDev

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileGwt {
    jvmArgs '-Dgwt.jjs.permutationWorkerFactory=com.google.gwt.dev.ThreadedPermutationWorkerFactory'
}

gwt {
    minHeapSize = "512M";
    maxHeapSize = "1024M";

    modules "com.shc.silenceengine.tests.GwtTests"
    devModules "com.shc.silenceengine.tests.GwtTests"

    compiler {
        style = "DETAILED"
    }

    eclipse.addGwtContainer = false;

    src += files(project(":tests").sourceSets.main.allJava.srcDirs)
    src += files(project(":backend-gwt").sourceSets.main.allJava.srcDirs)
    src += files(project(":silenceengine").sourceSets.main.allJava.srcDirs)
}

gretty {
    servletContainer = 'jetty9'
}

javadoc {
    options.addStringOption("sourcepath", "")
}

dependencies {
    providedCompile "com.google.gwt:gwt-user:${gwtVersion}"
    providedCompile "com.google.gwt:gwt-dev:${gwtVersion}"
    providedCompile "com.google.gwt:gwt-servlet:${gwtVersion}"

    providedCompile project(":silenceengine")
    providedCompile project(":backend-gwt")
    providedCompile project(":tests")
}

farm {
    webapp war.archivePath
}

task superDev(type: GwtSuperDev) {
    doFirst {
        gwt.modules = gwt.devModules
    }
}

war {
    from files(project(":silenceengine").sourceSets.main.resources.srcDirs)
    from files(project(":tests").sourceSets.main.resources.srcDirs)
}
